name: Continuous Integration with Github Actions

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2.1.0
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: "19"
          distribution: "temurin"
          cache: maven

      - name: Build Application JAR
        working-directory: ./rest-with-spring-erudio
        run: mvn clean package

      - name: Docker Compose Build
        working-directory: ./rest-with-spring-erudio
        run: docker compose build

      - name: Tag, and push docker image to Amazon ECR
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/rest-spring-erudio:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/rest-spring-erudio:latest ${{ secrets.IMAGE_REPO_URL }}:latest

          docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
          docker push ${{ secrets.IMAGE_REPO_URL }}:latest

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ secrets.IMAGE_REPO_URL }}:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.SERVICE_NAME }}
          cluster: ${{ secrets.CLUSTER_NAME }}
          wait-for-service-stability: true
      # - name: Push to Docker Hub Container Registry
      #   run: |
      #     docker tag ${{ secrets.DOCKER_USERNAME }}/rest-spring-erudio:latest ${{ secrets.DOCKER_USERNAME }}/rest-spring-erudio:${{ github.run_id }}

      #     docker push ${{ secrets.DOCKER_USERNAME }}/rest-spring-erudio:${{ github.run_id }}
      #     docker push ${{ secrets.DOCKER_USERNAME }}/rest-spring-erudio:latest

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      # - name: Update dependency graph
      #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
